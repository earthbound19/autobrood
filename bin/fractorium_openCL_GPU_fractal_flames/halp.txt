Ember - Fractal flames C++ port and enhancement with OpenCL GPU support version WIN-0.9.9.6

Usage:
	EmberGenome.exe --sequence=test.flame > sequenceout.flame

	--help                   Show this screen and exit.

	--version                Show version and exit.

	--openclinfo             Display platforms and devices for OpenCL and exit.

	--allvars                Display the names of all supported variations and exit.

	--regvars                Display the names of all supported regular variations and exit.

	--prevars                Display the names of all supported pre variations and exit.

	--postvars               Display the names of all supported post variations and exit.

	--verbose                Verbose output [default: false].

	--debug                  Debug output [default: false].

	--dumpargs               Print all arguments entered from either the command line or environment variables [default: false].

	--progress               Display progress. This will slow down processing by about 10% [default: false].

	--opencl                 Use OpenCL renderer (EmberCL) for rendering [default: false].

	--sp                     Use single precision for rendering instead of double precision [default: false].

	--earlyclip              Perform clipping of RGB values before spatial filtering for better antialiasing and resizing [default: false].

	--yaxisup                Orient the image with the positive y axis pointing up [default: false].

	--transparency           Include alpha channel in final output [default: false except for PNG].

	--hex_palette            Force palette RGB values to be hex when saving to Xml [default: true].

	--enclosed               Use enclosing Xml tags [default: true].

	--noedits                Exclude edit tags when writing Xml [default: false].

	--unsmoother             Do not use smooth blending for sheep edges [default: false].

	--lock_accum             Lock threads when accumulating to the histogram using the CPU. This will drop performance to that of single threading [default: false].

	--symmetry=<val>         Set symmetry of result [default: 0].

	--sheep_gen=<val>        Sheep generation of this flame [default: -1].

	--sheep_id=<val>         Sheep ID of this flame [default: -1].

	--nthreads=<val>         The number of threads to use [default: use all available cores].

	--print_edit_depth=<val> Depth to truncate <edit> tag structure when converting a flame to Xml. 0 prints all <edit> tags [default: 0].

	--frame=<val>            Time of first and last frame (ie do one frame).

	--nframes=<val>          Number of frames per loop and per interpolation in the animation [default: 20].

	--repeat=<val>           Number of new flames to create. Ignored if sequence, inter or rotate were specified [default: 1].

	--tries=<val>            Number times to try creating a flame that meets the specified constraints. Ignored if sequence, inter or rotate were specified [default: 10].

	--maxxforms=<val>        The maximum number of xforms allowed in the final output.

	--pixel_aspect=<val>     Aspect ratio of pixels (width over height), eg. 0.90909 for NTSC [default: 1.0].

	--stagger=<val>          Affects simultaneity of xform interpolation during flame interpolation.
	                         Represents how 'separate' the xforms are interpolated. Set to 1 for each
	                         xform to be interpolated individually, fractions control interpolation overlap [default: 0].

	--avg=<val>              Minimum average pixel channel sum (r + g + b) threshold from 0 - 765. Ignored if sequence, inter or rotate were specified [default: 20].

	--black=<val>            Minimum number of allowed black pixels as a percentage from 0 - 1. Ignored if sequence, inter or rotate were specified [default: 0.01].

	--white=<val>            Maximum number of allowed white pixels as a percentage from 0 - 1. Ignored if sequence, inter or rotate were specified [default: 0.05].

	--speed=<val>            Speed as a percentage from 0 - 1 that the affine transform of an existing flame mutates with the new flame. Ignored if sequence, inter or rotate were specified [default: 0.1].

	--offsetx=<val>          Amount to jitter each flame horizontally when applying genome tools [default: 0].

	--offsety=<val>          Amount to jitter each flame vertically when applying genome tools [default: 0].

	--loops=<val>            Number of times to rotate each control point in sequence [default: 1].

	--device                 The comma-separated OpenCL device indices to use. Single device: 0 Multi device: 0,1,3,4 [default: 0].

	--isaac_seed=<val>       Character-based seed for the random number generator [default: random].

	--flam3_palettes=<val>   Path and name of the palette file [default: flam3-palettes.xml].

	--id=<val>               ID to use in <edit> tags / image comments.

	--url=<val>              URL to use in <edit> tags / image comments.

	--nick=<val>             Nickname to use in <edit> tags / image comments.

	--comment=<val>          Comment to use in <edit> tags.

	--template=<val>         Apply defaults based on this flame.

	--clone=<val>            Clone random flame in input.

	--clone_all=<val>        Clones all flames in the input file. Useful for applying template to all flames.

	--clone_action=<val>     A description of the clone action taking place.

	--animate=<val>          Interpolates between all flames in the input file, using times specified in file.

	--mutate=<val>           Randomly mutate a random flame from the input file.

	--cross0=<val>           Randomly select one flame from the input file to genetically cross...

	--cross1=<val>           ...with one flame from this file.

	--method=<val>           Method used for genetic cross: alternate, interpolate, or union. For mutate: all_vars, one_xform, add_symmetry, post_xforms, color_palette, delete_xform, all_coefs [default: random].

	--inter=<val>            Interpolate the input file.

	--rotate=<val>           Rotate the input file.

	--sequence=<val>         360 degree rotation 'loops' times of each control point in the input file plus rotating transitions.

	--use_vars=<val>         Comma separated list of variation #'s to use when generating a random flame.

	--dont_use_vars=<val>    Comma separated list of variation #'s to NOT use when generating a random flame.

	--extras=<val>           Extra attributes to place in the flame section of the Xml.


